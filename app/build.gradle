apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//使用kapt依赖rxhttp-compiler，需要导入kapt插件
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.eeepay.zzq.agent_kotlin"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true
        //只保留指定和默认的资源
        resConfigs('zh-rCN')
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        //必须，告知RxHttp你依赖的okhttp版本，目前已适配 v3.12.0 - v4.7.2版本  (v4.3.0除外)
                        rxhttp_okhttp: '4.7.2',
                        //使用asXxx方法时必须，告知RxHttp你依赖的rxjava版本，可传入rxjava2、rxjava3
                        rxhttp_rxjava: 'rxjava2',
                        rxhttp_package: 'rxhttp'   //非必须，指定RxHttp相关类的生成路径，即包名
                ]
            }
        }
        ndk {
            //设置支持的so库
            abiFilters "armeabi", "armeabi-v7a"
        }
        //必须要保证所有的flavor 都属于同一个维度
        flavorDimensions "default"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0-alpha01'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
//
    //引入协程依赖
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'
    //anko
//    implementation "org.jetbrains.anko:anko-sdk15:0.9.1" // So here it's 15 too
//    implementation "org.jetbrains.anko:anko-appcompat-v7:0.9.1"
//    implementation "org.jetbrains.anko:anko-design:0.9.1"
//    implementation "org.jetbrains.anko:anko-recyclerview-v7:0.9.1"
//    implementation "org.jetbrains.anko:anko-common:$anko_version"
    implementation "org.jetbrains.anko:anko:$anko_version"
    //高仿微信底部状态栏的轻量级库，适用多数底部状态栏应用需求
//    implementation 'com.yinglan.alphatabs:library:1.0.8'
    //Coil是Android上的一个全新的图片加载框架，它的全名叫做coroutine image loader,即协程图片加载库。
    // 与传统的图片加载库Glide，Picasso或Fresco等相比。该具有轻量（只有大约1500个方法）、快、易于使用、更现代的API等优势。
    //它支持GIF和SVG，并且可以执行四个默认转换：模糊，圆形裁剪，灰度和圆角。
    //并且是全用Kotlin编写，如果你是纯Kotlin项目的话，那么这个库应该是你的首选。
    implementation("io.coil-kt:coil:0.11.0")
    //otto 通讯机制
    implementation 'com.squareup:otto:1.3.8'
    //权限管理easypermissions
    implementation 'pub.devrel:easypermissions:1.2.0'
    //FastSharedPreferences是一个Android平台的高性能key-value组件。读写性能远超SharedPreferences
    implementation 'com.jeremyliao:fast-sharedpreferences:0.0.1'
    //以下3个为必须，
    implementation 'com.ljx.rxhttp:rxhttp:2.4.1'
    implementation 'com.squareup.okhttp3:okhttp:4.7.2' //rxhttp v2.2.2版本起，需要手动依赖okhttp
    kapt 'com.ljx.rxhttp:rxhttp-compiler:2.4.1' //生成RxHttp类，非kotlin项目，请使用annotationProcessor代替kapt

    implementation 'com.ljx.rxlife:rxlife-coroutine:2.0.1' //管理协程生命周期，页面销毁，关闭请求
    //rxjava2   (RxJava2/Rxjava3二选一，使用asXxx方法时必须)
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.ljx.rxlife2:rxlife-rxjava:2.0.0' //管理RxJava2生命周期，页面销毁，关闭请求

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    //调试手机中数据库的福音：Android-Debug-Database
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
//    implementation 'androidx.activity:activity:1.2.0-beta01'
//    implementation 'androidx.fragment:fragment:1.3.0-beta01'


//    implementation 'com.android.support:cardview-v7:28.0.0'
//    //添加Retrofit网络库和gsonConverter的依赖，注意一定要2.6.0版本以上
//    implementation 'com.squareup.retrofit2:retrofit:2.7.0'
//    implementation 'com.squareup.retrofit2:converter-gson:2.7.0'
////添加Jetpack中架构组件的依赖，注意viewmodel要添加viewmodel-ktx的依赖
//    implementation "androidx.lifecycle:lifecycle-livedata:2.1.0"
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'
//    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
////添加Glide的依赖用于图片加载
//    implementation 'com.github.bumptech.glide:glide:4.10.0'

}
